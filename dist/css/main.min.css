@import url(https://fonts.googleapis.com/css?family=Open+Sans:400,600,700,800);@import url(https://fonts.googleapis.com/icon?family=Material+Icons);@import url(https://use.fontawesome.com/releases/v5.5.0/css/all.css);
/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */
html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section{display:block}h1{font-size:2em;margin:.67em 0}figure{margin:1em 40px}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}audio,canvas,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}fieldset{padding:.35em .75em .625em}legend{display:table;max-width:100%;padding:0;color:inherit;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}summary{display:list-item}[hidden],template{display:none}*,legend{-webkit-box-sizing:border-box;box-sizing:border-box}body,html{width:100%;min-height:100vh}body{margin:0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;font-family:"Open Sans",sans-serif}.content{-webkit-box-flex:1;-ms-flex:1 0;flex:1 0}.container{width:100%}@media screen and (min-width:576px){.container{margin:0 auto;width:540px}}@media screen and (min-width:768px){.container{width:720px}}@media screen and (min-width:992px){.container{width:960px}}@media screen and (min-width:1200px){.container{width:1140px}}.btn{border:0;border-radius:5px;height:50px;width:225px}.header{height:90px;position:fixed;left:0;right:0;z-index:1}.header .container{height:100%;background:#313030}.nav,.nav__list{height:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.nav__list{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:50%;list-style:none;margin:0;padding:0}.nav__item{height:100%;cursor:pointer;padding:0 25px}.nav__item:hover{background:#ff2d2d}.nav__item:hover .nav__link.active{color:#fff}.nav__link{color:#fff;text-transform:uppercase;font-weight:700;line-height:24px;letter-spacing:0;height:100%;-webkit-box-align:center;-ms-flex-align:center;align-items:center;text-decoration:none}.nav__link .active{color:#ff2d2d}.hero,.hero .container,.hero__content,.nav__link{display:-webkit-box;display:-ms-flexbox;display:flex}.hero{background:#f6f2f2;height:100vh;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.hero .container,.hero__content{height:50%;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.hero__content{height:100%;width:50%;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.hero__title{color:#000;letter-spacing:2px;line-height:72px;font-weight:800;margin:0;text-transform:uppercase;font-size:60px;font-size:3.75rem}.hero__description{margin:0;color:#000;max-width:500px;line-height:28px}.hero__btn{background:#ff2d2d;color:#fff;font-weight:700}.hero__btn:hover{background:#bb2828}.hero__btn:active{color:rgba(255,255,255,.8)}.hero__video{width:45%;height:100%;background:#c4c0b1;-webkit-box-shadow:7px 12.124px 73px rgba(0,0,0,.29);box-shadow:7px 12.124px 73px rgba(0,0,0,.29)}.portfolio,.portfolio .container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.portfolio .container{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:100px 0}.portfolio__sub-title,.portfolio__title{max-width:500px;text-align:center;color:#000;margin-top:0}.portfolio__title{text-transform:uppercase;font-weight:700;letter-spacing:0;font-size:46px;font-size:2.875rem;margin-bottom:35px}.portfolio__sub-title{line-height:28px;margin-bottom:100px;position:relative;z-index:-2}.feadback__sub-title:after,.portfolio__sub-title:after{content:'';position:absolute;height:2px;background:#ff2d2d}.portfolio__sub-title:after{-webkit-transform:translateX(-50%);transform:translateX(-50%);width:130px;bottom:-30px;left:50%;z-index:-1}.portfolio__nav,.portfolio__nav-list{display:-webkit-box;display:-ms-flexbox;display:flex}.portfolio__nav{margin-bottom:60px;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;width:100%}.portfolio__nav-list{margin:0;padding:0;width:80%;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.portfolio__nav-item{display:inline-block}.portfolio__nav-btn{background:0 0;border:0;bottom:0;letter-spacing:0;line-height:24px;color:#000;font-weight:700;text-transform:uppercase;cursor:pointer;font-size:22px;font-size:1.375rem}.portfolio__nav-btn:hover{color:#ff2d2d}.portfolio__nav-btn:active{color:rgba(255,45,45,.6)}.portfolio__galery{width:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.team__image--wrapper{background-color:#f5f0dd;margin-bottom:20px;width:24%;height:290px}.about{height:100vh}.about .container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;border-bottom:2px solid #ececec;height:100%;padding:100px 0}.description{width:45%}.description__title{text-transform:uppercase;letter-spacing:0;line-height:55px;color:#000;font-weight:700;margin-top:0;margin-bottom:50px;font-size:46px;font-size:2.875rem}.description__description{max-width:95%;margin-top:0;margin-bottom:50px;line-height:28px;color:#000}.description__btn{color:#ff2d2d;border:2px solid #ff2d2d;font-weight:700;line-height:34px;text-transform:capitalize;background:0 0;font-size:18px;font-size:1.125rem}.description__btn:hover{background:#bb2828;border:0;color:#fff}.description__btn:active{color:rgba(255,255,255,.8)}.skill,.skills{display:-webkit-box;display:-ms-flexbox;display:flex}.skills{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-wrap:wrap;flex-wrap:wrap;width:50%}.skill{width:45%;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;height:225px}.skill__icon{color:#ff2d2d;margin-bottom:25px;font-size:20px;font-size:1.25rem}.skill__title{margin:0 0 20px;font-weight:700;letter-spacing:0;font-size:24px;font-size:1.5rem}.skill__description{margin:0}.feadback{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.feadback .container{height:100%;padding:110px 0}.feadback__title{text-transform:uppercase;color:#000;max-width:720px;margin-top:0;margin-bottom:55px;letter-spacing:0;font-weight:700;font-size:46px;font-size:2.875rem}.feadback__sub-title{max-width:720px;margin-top:0;margin-bottom:130px;position:relative;line-height:28px;z-index:-1}.feadback__sub-title:after{z-index:-2;width:125px;left:0;bottom:-90px}.feadback-form,.feadback__content{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.feadback-form{width:720px;-ms-flex-wrap:wrap;flex-wrap:wrap}.form__input{background:#e5e5e5;border-radius:5px;border:0;padding-left:45px;font-size:18px;font-size:1.125rem}.form__input:not(:last-child){margin-bottom:40px}.email,.name{width:47%;height:70px}.text{width:100%;height:250px;padding-top:30px}.form__btn{width:100%;background:#ff2d2d;text-transform:uppercase;color:#fff;letter-spacing:0;line-height:34px;font-weight:700;text-align:center;font-size:18px;font-size:1.125rem}.form__btn:hover{background:#bb2828}.form__btn:active{color:rgba(255,255,255,.8)}.contacts{max-width:30%;color:#fff;padding:90px 0 90px 60px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;position:relative;z-index:-1}.contacts:before{content:'';width:200%;height:100%;position:absolute;background:#313030;top:0;left:0;z-index:-2}.contacts__title{margin-top:0;margin-bottom:5px;text-transform:uppercase;line-height:34px;font-weight:700;font-size:18px;font-size:1.125rem}.contacts__paragraph{line-height:28px;margin:0}.contacts__link{text-decoration:none;cursor:pointer;color:#fff}.subscribe{background:#f5f0dd}.subscribe .container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;text-align:center;height:100%;padding:90px 0;color:#fff}.subscribe__title{margin-top:0;margin-bottom:35px;font-size:46px;font-size:2.875rem}.subscribe__sub-title{margin-top:0;margin-bottom:65px}.subscribe__input{height:80px;width:500px;border-radius:5px;border:0;background:#fff;padding-left:40px;margin-right:25px}.subscribe__btn,.team__title{letter-spacing:0;font-weight:700;text-transform:uppercase}.subscribe__btn{height:80px;width:200px;background:#ff2d2d;line-height:34px;color:#fff;font-size:18px;font-size:1.125rem}.subscribe__btn:hover{background:#bb2828}.subscribe__btn:active{color:rgba(255,255,255,.8)}.team .container{padding:30px 0 100px}.team__title{color:#000;margin-top:0;margin-bottom:40px;font-size:46px;font-size:2.875rem}.team__sub-title{max-width:410px;line-height:28px;color:#000;margin-bottom:100px;position:relative;z-index:-2}.team__sub-title:after{content:'';position:absolute;width:120px;height:2px;background:#ff2d2d;bottom:-30px;left:0;z-index:-1}.team__content{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.team__current-member-image--wrapper{width:320px;height:450px;background:#f5f0dd;margin-right:70px}.team__member-decription{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.team__member-name{letter-spacing:0;color:#000;font-weight:700;text-transform:uppercase;margin:0;font-size:30px;font-size:1.875rem}.team__member-info{max-width:630px;margin:0 0 10px}.team__member-socials{margin-bottom:30px}.team__member-link{text-decoration:none;font-style:italic;font-size:18px;letter-spacing:1px;line-height:24px;color:#000;cursor:pointer}.team__member-link:not(:last-child){margin-right:30px}.team__member-link:hover{color:#ff2d2d}.team__member-link:active{opacity:.6}.team__members-galery{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.team__member-image-wrapper{width:23%;height:180px;background-image:url(https://images.pexels.com/photos/67636/rose-blue-flower-rose-blooms-67636.jpeg?auto=compress&cs=tinysrgb&h=350);background-color:#f5f0dd;position:relative;overflow:hidden;cursor:pointer}.footer .container,.team__member-image-wrapper:after{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.team__member-image-wrapper:after{content:'SOKINA JUE';position:absolute;bottom:0;width:100%;background:rgba(0,0,0,.6);color:#fff;-webkit-transform:translateY(100%);transform:translateY(100%);-webkit-transition:-webkit-transform .1s linear;transition:transform .1s linear;transition:transform .1s linear,-webkit-transform .1s linear;height:40px;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.team__member-image-wrapper:hover:after{-webkit-transform:translateY(0%);transform:translateY(0%)}.footer{background:#313030;color:#fff;height:100px}.footer .container{height:100%;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.footer__socials-list{list-style:none;margin:0;padding:0}.footer__socials-item{display:inline-block}.footer__socials-item:not(:last-child){margin-right:20px}.footer__socials-link{text-decoration:none;color:#fff}.footer__socials-link:hover{color:#ff2d2d}.footer__socials-link:active{opacity:.8}.footer__socials-icon{font-size:20px;font-size:1.25rem}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
